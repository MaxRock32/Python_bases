# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(a, b):
    c = [1, 1]
    for k in range(1, b):
        c.append(c[k-1]+c[k])
    return c[a-1:b]


print(fibonacci(1, 23))


# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

list = [5,2,7,4,0,9,8,6]


def sort(list):

    n = 1

    while n < len(list):
         for i in range(len(list)-n):
              if list[i] > list[i+1]:
                   list[i],list[i+1] = list[i+1],list[i]
         n += 1

    return list

print(sort(list))


#Задача-3:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.


def test_parall(A1, A2, A3, A4):
    A11 = [A1[0] - A1[0], A1[1] - A1[1]]
    A21 = [A2[0] - A1[0], A2[1] - A1[1]]
    A31 = [A3[0] - A1[0], A3[1] - A1[1]]
    A41 = [A4[0] - A1[0], A4[1] - A1[1]]

    test1 = [(A21[0] + A31[0]) == A41[0], (A21[1] + A31[1]) == A41[1]]
    test2 = [(A21[0] + A41[0]) == A31[0], (A21[1] + A41[1]) == A31[1]]
    test3 = [(A31[0] + A41[0]) == A21[0], (A31[1] + A41[1]) == A21[1]]

    return (test1[0] and test1[1]) or (test2[0] and test2[1]) or (test3[0] and test3[1])


A1 = [1, 2]
A2 = [2, 3]
A3 = [4, 2]
A4 = [5, 3]

total = test_parall(A1, A2, A3, A4)

if total:
    print('Да, являются')
else:
    print('Нет, не являются')

